// Generated by https://quicktype.io

export interface IgPostInterface {
  graphql: IgGraphqlInterface;
}

export interface IgGraphqlInterface {
  shortcode_media: IgShortcodeMediaInterface;
}

export interface IgShortcodeMediaInterface extends IgStickyNodeInterface {
  edge_media_to_caption: IgEdgeMediaToCaptionClassInterface;
  caption_is_edited: boolean;
  has_ranked_comments: boolean;
  edge_media_to_parent_comment: IgEdgeMediaToParentCommentClassInterface;
  edge_media_preview_comment: IgEdgeMediaPreviewInterface;
  comments_disabled: boolean;
  taken_at_timestamp: number;
  edge_media_preview_like: IgEdgeMediaPreviewInterface;
  edge_media_to_sponsor_user: IgEdgeMediaToCaptionClassInterface;
  location: IgLocationInterface;
  viewer_has_liked: boolean;
  viewer_has_saved: boolean;
  viewer_has_saved_to_collection: boolean;
  viewer_in_photo_of_you: boolean;
  viewer_can_reshare: boolean;
  owner: IgShortcodeMediaOwnerInterface;
  is_ad: boolean;
  edge_web_media_to_related_media: IgEdgeMediaToCaptionClassInterface;
  edge_sidecar_to_children: IgEdgeSidecarToChildrenInterface;
}

export interface IgDimensionsInterface {
  height: number;
  width: number;
}

export interface IgDisplayResourceInterface {
  src: string;
  config_width: number;
  config_height: number;
}

export interface IgEdgeMediaPreviewInterface {
  count: number;
  edges: Array<IgEdgeMediaPreviewCommentEdgeInterface>;
}

export interface IgEdgeMediaToParentCommentClassInterface {
  count: number;
  page_info: IgPageInfoInterface;
  edges: Array<IgEdgeMediaPreviewCommentEdgeInterface>;
}

export interface IgPurpleNodeInterface {
  id: string;
  text: string;
  created_at: number;
  did_report_as_spam: boolean;
  owner: IgUserClassInterface;
  viewer_has_liked: boolean;
  edge_liked_by: IgEdgeLikedByInterface;
  edge_threaded_comments?: IgEdgeMediaToParentCommentClassInterface;
}

export interface IgEdgeMediaPreviewCommentEdgeInterface {
  node: IgPurpleNodeInterface;
}

export interface IgPageInfoInterface {
  has_next_page: boolean;
  end_cursor: null;
}

export interface IgEdgeLikedByInterface {
  count: number;
}

export interface IgUserClassInterface {
  id: string;
  is_verified: boolean;
  profile_pic_url: string;
  username: string;
  full_name?: string;
}

export interface IgEdgeMediaToCaptionClassInterface {
  edges: Array<IgEdgeMediaToCaptionEdgeInterface>;
}

export interface IgEdgeMediaToCaptionEdgeInterface {
  node: IgFluffyNodeInterface;
}

export interface IgFluffyNodeInterface {
  text: string;
}

export interface IgEdgeMediaToTaggedUserInterface {
  edges: Array<IgEdgeMediaToTaggedUserEdgeInterface>;
}

export interface IgEdgeMediaToTaggedUserEdgeInterface {
  node: IgTentacledNodeInterface;
}

export interface IgTentacledNodeInterface {
  user: IgUserClassInterface;
  x: number;
  y: number;
}

export interface IgEdgeSidecarToChildrenInterface {
  edges: Array<IgEdgeSidecarToChildrenEdgeInterface>;
}

export interface IgEdgeSidecarToChildrenEdgeInterface {
  node: IgStickyNodeInterface;
}

export interface IgStickyNodeInterface {
  __typename: IgTypenameInterface;
  id: string;
  shortcode: string;
  dimensions: IgDimensionsInterface;
  gating_info: null;
  media_preview: string;
  display_url: string;
  display_resources: Array<IgDisplayResourceInterface>;
  accessibility_caption?: string;
  is_video: boolean;
  should_log_client_event: boolean;
  tracking_token: string;
  edge_media_to_tagged_user: IgEdgeMediaToTaggedUserInterface;
  dash_info?: IgDashInfoInterface;
  video_url?: string;
  video_view_count?: number;
}

export enum IgTypenameInterface {
  GraphImage = 'GraphImage',
  GraphVideo = 'GraphVideo',
}

export interface IgDashInfoInterface {
  is_dash_eligible: boolean;
  video_dash_manifest: null;
  number_of_qualities: number;
}

export interface IgLocationInterface {
  id: string;
  has_public_page: boolean;
  name: string;
  slug: string;
  address_json: string;
}

export interface IgShortcodeMediaOwnerInterface {
  id: string;
  is_verified: boolean;
  profile_pic_url: string;
  username: string;
  blocked_by_viewer: boolean;
  followed_by_viewer: boolean;
  full_name: string;
  has_blocked_viewer: boolean;
  is_private: boolean;
  is_unpublished: boolean;
  requested_by_viewer: boolean;
}
